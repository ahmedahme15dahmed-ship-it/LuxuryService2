/**
 * Luxury AI - ูููุฐุฌ ุฐูุงุก ุงุตุทูุงุนู ูุณุชูู
 * ููู ุงููููุฐุฌ ุงูุฑุฆูุณู ููุฐูุงุก ุงูุงุตุทูุงุนู
 */

export class LuxuryAI {
  constructor() {
    this.name = "Luxury AI"
    this.version = "1.0.0"
    this.capabilities = [
      'ุชุญููู ุงูููุฏ',
      'ุงูุชุดุงู ุงูุฃุฎุทุงุก',
      'ุชุญุณูู ุงูุฃุฏุงุก',
      'ุดุฑุญ ุงูุฎูุงุฑุฒููุงุช',
      'ุงูุชุฑุงุญ ุงูุชุญุณููุงุช',
      'ุชูููุฏ ุงูููุฏ',
      'ูุฑุงุฌุนุฉ ุงูููุฏ'
    ]
    
    // ูุงุนุฏุฉ ูุนุฑูุฉ ุงูุจุฑูุฌุฉ
    this.knowledgeBase = {
      lua: {
        keywords: ['function', 'end', 'if', 'then', 'else', 'elseif', 'while', 'for', 'do', 'repeat', 'until', 'local', 'return'],
        patterns: {
          function: /function\s+(\w+)\s*\([^)]*\)/g,
          variable: /local\s+(\w+)/g,
          loop: /(for|while|repeat)\s+/g
        },
        bestPractices: [
          'ุงุณุชุฎุฏู local ูููุชุบูุฑุงุช ุงููุญููุฉ',
          'ุชุฌูุจ ุงููุชุบูุฑุงุช ุงูุนุงูุฉ ุบูุฑ ุงูุถุฑูุฑูุฉ',
          'ุงุณุชุฎุฏู ุฃุณูุงุก ูุตููุฉ ููุฏูุงู ูุงููุชุบูุฑุงุช',
          'ุฃุถู ุชุนูููุงุช ููููุฏ ุงููุนูุฏ'
        ]
      },
      javascript: {
        keywords: ['function', 'var', 'let', 'const', 'if', 'else', 'for', 'while', 'return', 'class', 'import', 'export'],
        patterns: {
          function: /(function\s+\w+|const\s+\w+\s*=\s*\([^)]*\)\s*=>)/g,
          variable: /(let|const|var)\s+(\w+)/g,
          class: /class\s+(\w+)/g
        },
        bestPractices: [
          'ุงุณุชุฎุฏู const ู let ุจุฏูุงู ูู var',
          'ุงุณุชุฎุฏู Arrow Functions ุนูุฏ ุงูุญุงุฌุฉ',
          'ุชุฌูุจ ุงูุชููุซ ุงูุนุงู (Global Pollution)',
          'ุงุณุชุฎุฏู async/await ููุนูููุงุช ุบูุฑ ุงููุชุฒุงููุฉ'
        ]
      },
      python: {
        keywords: ['def', 'class', 'if', 'elif', 'else', 'for', 'while', 'import', 'from', 'return', 'try', 'except'],
        patterns: {
          function: /def\s+(\w+)\s*\([^)]*\):/g,
          class: /class\s+(\w+).*:/g,
          variable: /(\w+)\s*=/g
        },
        bestPractices: [
          'ุงุชุจุน PEP 8 ููุชูุณูู',
          'ุงุณุชุฎุฏู ุฃุณูุงุก ูุตููุฉ',
          'ุฃุถู docstrings ููุฏูุงู ูุงูููุงุณุงุช',
          'ุงุณุชุฎุฏู Type Hints ุนูุฏ ุงูุฅููุงู'
        ]
      }
    }
    
    // ูุงููุณ ุงูุฑุฏูุฏ ุงูุฐููุฉ
    this.responses = {
      greetings: [
        'ูุฑุญุจุงู! ููู ูููููู ูุณุงุนุฏุชู ูู ุงูุจุฑูุฌุฉ ุงููููุ',
        'ุฃููุงู ุจู! ุฃูุง ููุง ููุณุงุนุฏุชู ูู ุชุญููู ูุชุทููุฑ ุงูููุฏ.',
        'ูุฑุญุจุงู! ูุง ูู ุงูุชุญุฏู ุงูุจุฑูุฌู ุงูุฐู ุชูุงุฌููุ'
      ],
      codeAnalysis: [
        'ุฏุนูู ุฃุญูู ูุฐุง ุงูููุฏ ูู...',
        'ุณุฃููู ุจูุญุต ุงูููุฏ ูุฅุนุทุงุฆู ุชูุฑูุฑ ููุตู.',
        'ููุชุงุฒ! ุณุฃุญูู ูุฐุง ุงูููุฏ ูุฃูุฏู ูู ุงูุชุฑุงุญุงุช ููุชุญุณูู.'
      ],
      improvements: [
        'ุฅููู ุจุนุถ ุงูุงูุชุฑุงุญุงุช ูุชุญุณูู ุงูููุฏ:',
        'ูููู ุชุญุณูู ูุฐุง ุงูููุฏ ูู ุฎูุงู:',
        'ูุฌุนู ุงูููุฏ ุฃูุซุฑ ููุงุกุฉุ ุฃูุชุฑุญ:'
      ]
    }
  }
  
  /**
   * ุชุญููู ุงูููุฏ ุงููุฑููุน
   */
  analyzeCode(code, filename) {
    const fileExtension = filename.split('.').pop().toLowerCase()
    const language = this.detectLanguage(fileExtension)
    
    if (!language) {
      return `ุชู ุฑูุน ุงูููู ${filename} ุจูุฌุงุญุ ููููู ูุง ุฃุณุชุทูุน ุชุญููู ูุฐุง ุงูููุน ูู ุงููููุงุช ุญุงููุงู. ุฃุฏุนู: Lua, JavaScript, Python, HTML, CSS.`
    }
    
    const analysis = this.performCodeAnalysis(code, language)
    const suggestions = this.generateSuggestions(code, language)
    
    return `
๐ **ุชุญููู ุงูููู: ${filename}**

๐ **ุงููุบุฉ ุงูููุชุดูุฉ:** ${this.getLanguageName(language)}

๐ **ุชุญููู ุงูููุฏ:**
${analysis}

๐ก **ุงูุชุฑุงุญุงุช ุงูุชุญุณูู:**
${suggestions}

โจ **ุฃูุถู ุงูููุงุฑุณุงุช ูู ${this.getLanguageName(language)}:**
${this.knowledgeBase[language].bestPractices.map(practice => `โข ${practice}`).join('\n')}

ูู ุชุฑูุฏ ููู ุดุฑุญ ุฃู ุฌุฒุก ูุนูู ูู ุงูููุฏ ุฃู ูุณุงุนุฏุชู ูู ุชุญุณูููุ
    `
  }
  
  /**
   * ุงูุชุดุงู ูุบุฉ ุงูุจุฑูุฌุฉ
   */
  detectLanguage(extension) {
    const languageMap = {
      'lua': 'lua',
      'js': 'javascript',
      'jsx': 'javascript',
      'ts': 'javascript',
      'tsx': 'javascript',
      'py': 'python',
      'html': 'html',
      'css': 'css'
    }
    
    return languageMap[extension] || null
  }
  
  /**
   * ุงูุญุตูู ุนูู ุงุณู ุงููุบุฉ ุจุงูุนุฑุจูุฉ
   */
  getLanguageName(language) {
    const names = {
      'lua': 'Lua',
      'javascript': 'JavaScript',
      'python': 'Python',
      'html': 'HTML',
      'css': 'CSS'
    }
    
    return names[language] || language
  }
  
  /**
   * ุชุญููู ููุตู ููููุฏ
   */
  performCodeAnalysis(code, language) {
    const lines = code.split('\n').length
    const chars = code.length
    
    let analysis = `โข ุนุฏุฏ ุงูุฃุณุทุฑ: ${lines}\nโข ุนุฏุฏ ุงูุฃุญุฑู: ${chars}\n`
    
    if (this.knowledgeBase[language]) {
      const kb = this.knowledgeBase[language]
      
      // ุชุญููู ุงูุฏูุงู
      const functions = code.match(kb.patterns.function) || []
      analysis += `โข ุนุฏุฏ ุงูุฏูุงู: ${functions.length}\n`
      
      // ุชุญููู ุงููุชุบูุฑุงุช
      if (kb.patterns.variable) {
        const variables = code.match(kb.patterns.variable) || []
        analysis += `โข ุนุฏุฏ ุงููุชุบูุฑุงุช: ${variables.length}\n`
      }
      
      // ุชุญููู ุงููููุงุช ุงูููุชุงุญูุฉ
      const keywordCount = kb.keywords.filter(keyword => 
        code.includes(keyword)
      ).length
      analysis += `โข ุงููููุงุช ุงูููุชุงุญูุฉ ุงููุณุชุฎุฏูุฉ: ${keywordCount}\n`
    }
    
    return analysis
  }
  
  /**
   * ุชูููุฏ ุงูุชุฑุงุญุงุช ุงูุชุญุณูู
   */
  generateSuggestions(code, language) {
    const suggestions = []
    
    // ูุญุต ุทูู ุงูุฃุณุทุฑ
    const longLines = code.split('\n').filter(line => line.length > 100)
    if (longLines.length > 0) {
      suggestions.push('โข ุจุนุถ ุงูุฃุณุทุฑ ุทูููุฉ ุฌุฏุงูุ ููุฑ ูู ุชูุณูููุง ูุชุญุณูู ุงููุฑุงุกุฉ')
    }
    
    // ูุญุต ุงูุชุนูููุงุช
    const commentCount = (code.match(/\/\/|\/\*|\#|--/g) || []).length
    if (commentCount < code.split('\n').length * 0.1) {
      suggestions.push('โข ุฃุถู ุงููุฒูุฏ ูู ุงูุชุนูููุงุช ูุชูุถูุญ ุงูููุฏ')
    }
    
    // ูุญุต ุฎุงุต ุจูู ูุบุฉ
    if (language === 'javascript') {
      if (code.includes('var ')) {
        suggestions.push('โข ุงุณุชุฎุฏู let ุฃู const ุจุฏูุงู ูู var')
      }
      if (!code.includes('use strict')) {
        suggestions.push('โข ููุฑ ูู ุงุณุชุฎุฏุงู "use strict" ูููุฏ ุฃูุซุฑ ุฃูุงูุงู')
      }
    }
    
    if (language === 'lua') {
      if (!code.includes('local ')) {
        suggestions.push('โข ุงุณุชุฎุฏู local ูููุชุบูุฑุงุช ุงููุญููุฉ ูุชุฌูุจ ุงูุชููุซ ุงูุนุงู')
      }
    }
    
    if (language === 'python') {
      if (!code.includes('"""') && !code.includes("'''")) {
        suggestions.push('โข ุฃุถู docstrings ููุฏูุงู ูุงูููุงุณุงุช')
      }
    }
    
    return suggestions.length > 0 ? suggestions.join('\n') : 'โข ุงูููุฏ ูุจุฏู ุฌูุฏุงู! ูุง ุชูุฌุฏ ุงูุชุฑุงุญุงุช ุนุงุฌูุฉ.'
  }
  
  /**
   * ุชูููุฏ ุฑุฏ ุฐูู
   */
  generateResponse(message, uploadedFiles = []) {
    const lowerMessage = message.toLowerCase()
    
    // ุฑุฏูุฏ ุนูู ุงูุชุญูุงุช
    if (lowerMessage.includes('ูุฑุญุจุง') || lowerMessage.includes('ุงูุณูุงู') || lowerMessage.includes('ุฃููุง')) {
      return this.getRandomResponse('greetings')
    }
    
    // ุฃุณุฆูุฉ ุญูู ุงููุฏุฑุงุช
    if (lowerMessage.includes('ูุงุฐุง ุชุณุชุทูุน') || lowerMessage.includes('ูุฏุฑุงุชู') || lowerMessage.includes('ุชุณุงุนุฏูู')) {
      return `ุฃุณุชุทูุน ูุณุงุนุฏุชู ูู:
      
${this.capabilities.map(cap => `โจ ${cap}`).join('\n')}

ููููู ุฑูุน ูููุงุช ุงูููุฏ ูุณุฃุญูููุง ููุ ุฃู ุงุณุฃููู ุฃู ุณุคุงู ุญูู ุงูุจุฑูุฌุฉ!`
    }
    
    // ุฃุณุฆูุฉ ุญูู ูุบุงุช ุงูุจุฑูุฌุฉ
    if (lowerMessage.includes('ูุบุงุช') || lowerMessage.includes('ุฃุฏุนู')) {
      return `ุฃุฏุนู ุญุงููุงู ูุฐู ุงููุบุงุช:
      
๐น **Lua** - ุชุญููู ูุชุญุณูู ุงูููุฏ
๐น **JavaScript** - ES6+, Node.js, React
๐น **Python** - ุชุญููู ูุฃูุถู ุงูููุงุฑุณุงุช  
๐น **HTML/CSS** - ููููุฉ ูุชุตููู ุงูููุจ

ุงุฑูุน ูููู ูุณุฃุญููู ูู ููุฑุงู!`
    }
    
    // ุฃุณุฆูุฉ ุนุงูุฉ ุญูู ุงูุจุฑูุฌุฉ
    if (lowerMessage.includes('ููู') || lowerMessage.includes('ุดุฑุญ') || lowerMessage.includes('ุชุนูู')) {
      return this.generateProgrammingAdvice(message)
    }
    
    // ุฑุฏ ุงูุชุฑุงุถู ุฐูู
    return `ุดูุฑุงู ูู ุนูู ุณุคุงูู! 

${message.includes('ุ') ? 'ูุฐุง ุณุคุงู ููุชุงุฒ.' : 'ุฃูุฏุฑ ุชูุงุนูู ูุนู.'} 

ูููููู ูุณุงุนุฏุชู ูู:
โข ุชุญููู ููุฑุงุฌุนุฉ ุงูููุฏ
โข ุดุฑุญ ุงูููุงููู ุงูุจุฑูุฌูุฉ  
โข ุงูุชุฑุงุญ ุงูุชุญุณููุงุช ูุงูุญููู
โข ุงูุฅุฌุงุจุฉ ุนูู ุฃุณุฆูุฉ ุงูุจุฑูุฌุฉ

ุงุฑูุน ููู ููุฏ ุฃู ุงุณุฃููู ุณุคุงูุงู ูุญุฏุฏุงู ูุณุฃููู ุณุนูุฏุงู ููุณุงุนุฏุชู! ๐`
  }
  
  /**
   * ุชูููุฏ ูุตุงุฆุญ ุจุฑูุฌูุฉ
   */
  generateProgrammingAdvice(question) {
    const advice = [
      'ุงูุจุฑูุฌุฉ ูู ูุญุชุงุฌ ููููุงุฑุณุฉ ุงููุณุชูุฑุฉ. ุงุจุฏุฃ ุจูุดุงุฑูุน ุตุบูุฑุฉ ูุชุฏุฑุฌ ููุฃูุจุฑ.',
      'ุงูุฑุฃ ุงูููุฏ ุงูููุชูุจ ูู ูุทูุฑูู ุขุฎุฑูู ูุชุชุนูู ุฃุณุงููุจ ุฌุฏูุฏุฉ.',
      'ูุง ุชุฎู ูู ุงูุฃุฎุทุงุก - ูู ุฌุฒุก ูู ุนูููุฉ ุงูุชุนูู.',
      'ุงูุชุจ ููุฏ ูุธูู ููุงุจู ูููุฑุงุกุฉุ ูุฃูุช ุณุชุนูุฏ ุฅููู ูุงุญูุงู.',
      'ุงุณุชุฎุฏู ุฃุฏูุงุช ุงูุชุญูู ูู ุงูุฅุตุฏุงุฑุงุช ูุซู Git ูู ุงูุจุฏุงูุฉ.'
    ]
    
    return `๐ก **ูุตูุญุฉ ุจุฑูุฌูุฉ:**

${advice[Math.floor(Math.random() * advice.length)]}

ูู ุชุฑูุฏ ูุณุงุนุฏุฉ ูู ููุถูุน ุจุฑูุฌู ูุญุฏุฏุ ุงุฑูุน ููู ููุฏ ุฃู ุงุณุฃููู ุณุคุงูุงู ููุตูุงู!`
  }
  
  /**
   * ุงูุญุตูู ุนูู ุฑุฏ ุนุดูุงุฆู ูู ูุฆุฉ ูุนููุฉ
   */
  getRandomResponse(category) {
    const responses = this.responses[category]
    return responses[Math.floor(Math.random() * responses.length)]
  }
}